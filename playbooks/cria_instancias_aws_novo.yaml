---
- name: Create AWS EC2 instances
  hosts: localhost
  gather_facts: no
  vars:
    instance_type: t3.xlarge
    vpc_id: <vpc id>
    ami_id: ami-05a36e1502605b4aa # CentOS 7 x86_64
    subnet_id: <subnet id>
    region: us-east-2
    key_name: meetup
    security_group: <sg id>
    count: 4

  tasks:
    - name: Launch EC2 instances
      amazon.aws.ec2_instance:
        region: "{{ region }}"
        network:
          assign_public_ip: true
        vpc_subnet_id: "{{ subnet_id }}"
        key_name: "{{ key_name }}"
        security_group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami_id }}"
        state: running
        wait: yes
        count: "1"
        tags:
          Name: "kube-{{ item }}"
      with_items: "{{ range(1, count+1) | list }}"
      register: ec2_instances

#      loop: "{{ range(1, count+1) | list }}"
#      loop_control:
#        index_var: item_index

#    - debug:
#       var: ec2_instances


    - name: Add instances to host group
      add_host:
        name: "{{ item.instances.0.public_ip_address }}"
        ansible_host: "{{ item.instances.0.public_ip_address }}"
        ansible_ssh_private_key_file: "./local_stuff/meetup.pem"
        groups: ec2
      with_items:
        - "{{ ec2_instances.results }}"

    - name: Add instances to host group control-plane
      add_host:
        name: "{{ item.instances.0.public_ip_address }}"
        ansible_host: "{{ item.instances.0.public_ip_address }}"
        ansible_ssh_private_key_file: "./local_stuff/meetup.pem"
        groups: control_plane
      when: item.instances.0.tags.Name == "kube-1"
      with_items:
        - "{{ ec2_instances.results }}"

    - name: Add instances to host group workers
      add_host:
        name: "{{ item.instances.0.public_ip_address }}"
        ansible_host: "{{ item.instances.0.public_ip_address }}"
        ansible_ssh_private_key_file: "./local_stuff/meetup.pem"
        groups: workers
      when: item.instances.0.tags.Name == "kube-2" or item.instances.0.tags.Name == "kube-3" or item.instances.0.tags.Name == "kube-4"
      with_items:
        - "{{ ec2_instances.results }}"


    - name: Wait for SSH
      wait_for: host="{{ item.instances[0].public_ip_address }}" port=22 delay=10  timeout=300
      with_items: "{{ ec2_instances.results }}"
 #     ignore_errors: yes

- name: Configure CentOS 7 instances
  hosts: ec2
  remote_user: centos
  gather_facts: no
  become: yes
  become_method: sudo

  tasks:


    - name: Install required packages
      yum:
        name:
          - epel-release
          - python3-pip
        state: present

#    - name: Update packages
#      yum:
#       name: "*"
#       state: latest

    - name: Set timezone to UTC
      community.general.timezone:
        name: UTC

- name: Install Kubernetes and Calico on CentOS 7
  hosts: ec2
  remote_user: centos
  become: yes
  become_method: sudo
  vars:
    k8s_version: 1.21.5
    control_plane_count: 1
    worker_count: 3
  roles:
    - kubernetes
